@model CassandraWebTest.Models.ArticlesModels
@{
    ViewBag.Title = "Watch";
}
<script>
!function (d, s, id)
{
    var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https';
    if (!d.getElementById(id)) {
        js = d.createElement(s); js.id = id;
        js.src = p + '://platform.twitter.com/widgets.js';
        fjs.parentNode.insertBefore(js, fjs);
    }
}(document, 'script', 'twitter-wjs');</script>
<script src="http://platform.linkedin.com/in.js" type="text/javascript"></script>
<div id="fb-root"></div>
<script>
(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.9&appId=1866507123610999";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="container">
    <div class="page-header">
        <h1>@Html.DisplayFor(model => model.title)</h1>
        <h4>
            @if (User.Identity.Name == Model.author)
            {
                <span class="label label-success">
                    Author: YOU
                </span>
            }
            else
            {
                <span class="label label-info">
                    Author: @Html.DisplayFor(modelItem => Model.author)
                </span>
            }
            <span class="label label-default">
                Clicked: @Html.DisplayFor(model => model.view_count)
            </span>
        </h4>
        <h6>Posted: @Html.DisplayFor(model => model.timestamp.DateTime) </h6>
        @if (User.Identity.Name == Model.author)
        {
            <button type="button" class="btn btn-danger btn-s" data-toggle="modal" data-target="#deleteModal">Delete</button>
            @Html.ActionLink("Edit", "EditPost", new { id = Model.id }, new { @class = "btn btn-info btn-s" })
        }
    </div>
    <p>@Html.DisplayFor(model => model.content)</p>
    <hr />
    @using Commerce.Social
    @{
        var fbButtonSettings = new FaceBookLikeButtonSettings()
        {
            Layout = FaceBookLikeButtonLayout.Button,
            IncludeShareButton = true,
            PluginType = FaceBookPluginType.Xfbml
        };
        var linkedInButtonSettings = new LinkedInShareButtonSettings()
        {
            DisplayCount = false
        };
        var twitterButtonSettings = new TwitterShareButtonSettings()
        {
            DisplayCount = false,
        };
    }
    <ul class="list-unstyled list-inline blog-info">
        <li style="vertical-align: top;">@Html.TwitterShareButton(Request.Url.AbsoluteUri, twitterButtonSettings)</li>
    </ul>

    <h3>Comments</h3>
    <div class="list-group">
        @foreach (var comment in Model.comments)
        {
            <div class="list-group-item">
                <h5 class="list-group-item-heading"><strong>@Html.DisplayFor(com => comment.author)</strong></h5>
                <p class="list-group-item-text">@Html.DisplayFor(com => comment.commentary)</p>
                    @{
                        int voteValue = 0;
                        int yourValue = 0;
                        if (comment.votes != null && comment.votes.Count() > 0)
                        {
                            foreach (var vote in comment.votes)
                            {
                                voteValue += vote.vote;

                                if (vote.username == User.Identity.Name)
                                {
                                    yourValue = vote.vote;
                                }
                            }
                        }
                        using (Html.BeginForm("VoteComment", "Home", FormMethod.Post, new { @id = "plusForm"}))
                        {
                            @Html.Hidden("postid", Model.id);
                            @Html.Hidden("vote", 1);
                            @Html.Hidden("commentid", 1, new { @id = "plusCommentId"});
                        }

                        using (Html.BeginForm("VoteComment", "Home", FormMethod.Post, new { @id = "minusForm" }))
                        {
                            @Html.Hidden("postid", Model.id);
                            @Html.Hidden("vote", -1);
                            @Html.Hidden("commentid", 1, new { @id = "minusCommentId" });
                        }
                    }
               
                <div class="btn-group btn-group-xs">
                    @if (yourValue != 1 && Request.IsAuthenticated)
                    {
                        <button class="btn btn-success" onclick="postPlus('@comment.id')">+</button>
                    }
                    else
                    {
                        <button class="btn btn-success" disabled>+</button>
                    }
                    <button class="btn btn-default" disabled>@voteValue</button>

                    @if (yourValue != -1 && Request.IsAuthenticated)
                    {
                        <button class="btn btn-danger" onclick="postMinus('@comment.id')">-</button>
                    }
                    else
                    {
                        <button class="btn btn-danger" disabled>-</button>
                    }
                </div>
            </div>
                        }
        <div class="list-group-item">
            @if (Request.IsAuthenticated)
            {
                using (Html.BeginForm("PostComment", "Home", FormMethod.Post))
                {
                    <div class="form-group">
                        <label for="comment">Comment:</label>
                        @Html.TextArea("comment", new { @class = "form-control", @rows = "5" })
                        @Html.Hidden("postid", Model.id)
                    </div>
                    <input type="submit" class="btn" />
                }
            }
            else
            {
                <h3>Log in to comment</h3>
            }
        </div>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h2>Do you realy want to delete this post ?</h2>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Delete", "Home", FormMethod.Post))
                {
                    @Html.Hidden("postid", Model.id)
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Nope</button>
                    <input type="submit" class="btn btn-danger" value="Delete" />
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function postPlus(comentId) {
            $("#plusCommentId").val(comentId);
            $("#plusForm").submit();
        }

        function postMinus(comentId) {
            $("#minusCommentId").val(comentId);
            $("#minusForm").submit();
        }

    </script>
}